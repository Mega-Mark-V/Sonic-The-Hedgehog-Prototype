/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 's1proto'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

/* 1 */
enum system
{
  CARTRIDGE = 0x0,
  CARTRIDGEE = 0x7FFFF,
  CARTRAM = 0x80000,
  WORKRAM = 0xFF0000,
  WORKRAME = 0xFFFFFF,
};

/* 2 */
struct __attribute__((packed)) __attribute__((aligned(1))) obj
{
  char ID;
  char RenderFlags;
  __int16 Tile;
  int Map;
  __int16 X;
  __int16 YScr;
  __int16 Y;
  __int16 YSub;
  __int16 XSpeed;
  __int16 YSpeed;
  __int16 Inertia;
  char YRad;
  char XRad;
  char XDisp;
  char Priority;
  char Frame;
  char AnimFrame;
  char Anim;
  char AnimPrevious;
  char FrameTimer;
  char User_1F;
  char Collision;
  char ColProp;
  char Status;
  char Respawn;
  char Action;
  char SubAction;
  char Angle;
  char field_27;
  char Argument;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
  char field_34;
  char field_35;
  char field_36;
  char field_37;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char field_3E;
  char field_3F;
  char Size;
};

/* 4 */
enum sound
{
  musID_GHZ = 0x81,
  musID_LZ = 0x82,
  musID_MZ = 0x83,
  musID_SLZ = 0x84,
  musID_SZ = 0x85,
  musID_CWZ = 0x86,
  musID_Invincible = 0x87,
  musID_ExtraLife = 0x88,
  musID_Special = 0x89,
  musID_TitleScreen = 0x8A,
  musID_Ending = 0x8B,
  musID_Boss = 0x8C,
  musID_Final = 0x8D,
  musID_ZoneClear = 0x8E,
  musID_GameOver = 0x8F,
  musID_Continue = 0x90,
  musID_StaffRoll = 0x91,
  sfxID_Jump = 0xA0,
  sfxID_Death = 0xA3,
  sfxID_Skid = 0xA4,
  sfxID_MissileExplode = 0xA5,
  sfxID_Spikes = 0xA6,
  sfxID_Push = 0xA7,
  sfxID_Vanish = 0xA8,
  sfxID_Shield = 0xAF,
  sfxID_Bumper = 0xB4,
  sfxID_RingCollect = 0xB5,
  sfxID_SpikeRetract = 0xB6,
  sfxID_Slam = 0xBD,
  sfxID_Spin = 0xBE,
  sfxID_Flap = 0xC0,
  sfxID_Pop = 0xC1,
  sfxID_CashRegister = 0xC5,
  sfxID_ChainClink = 0xC7,
  sfxID_Fire = 0xC8,
  sfxID_Button = 0xCD,
  sndCMD_Stop = 0xE0,
  sndCMD_e1 = 0xE1,
  sndCMD_Fast = 0xE2,
  sndCMD_Slow = 0xE3,
};

/* 5 */
enum error
{
  errorBus = 0x2,
  errorIllegal = 0x4,
  errorAddress = 0x6,
  errorZeroDiv = 0x8,
  errorChkInst = 0xA,
  errorTrapV = 0xC,
  errorPrivilege = 0xE,
  errorTrace = 0x10,
  errorLineA = 0x12,
  errorLineF = 0x14,
};

/* 6 */
enum vblank
{
  vbID_Invalid = 0x0,
  vbID_LOGO = 0x2,
  vbID_TITLE = 0x4,
  vbID_6 = 0x6,
  vbID_LEVEL = 0x8,
  vbID_SpecialStg = 0xA,
  vbID_PalFunctions = 0x12,
};

/* 7 */
enum gm
{
  gmID_LOGO = 0x0,
  gmID_TITLE = 0x4,
  gmID_DEMO = 0x8,
  gmID_LEVEL = 0xC,
  gmID_SPECIAL = 0x10,
};

/* 8 */
struct sonic
{
  _BYTE gap0[20];
  __int16 Inertia;
  char YRad;
  char XRad;
  char XDisp;
  char Priority;
  char Frame;
  char AnimFrame;
  char Anim;
  char AnimPrevious;
  char AnimSpeed;
  char field_1F;
  char field_20;
  char air;
  char Status;
  char field_23;
  char Action;
  char SubAction;
  char Angle;
  char field_27;
  char Argument;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  __int16 Invulnerable;
  __int16 Invincible;
  __int16 Speedup;
  char SensorFront;
  char SensorBack;
  char Convex;
  char field_39;
  char LocalTimer;
  char field_3B;
  char field_3C;
  char OnObject;
  char ScreenReset;
  __attribute__((packed)) __attribute__((aligned(1))) __int16 field_3F;
  char field_41;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
};

/* 9 */
enum zoneID
{
  zoneID_GHZ = 0x0,
  act1 = 0x0,
  zoneID_LZ = 0x1,
  act2 = 0x1,
  zoneID_MZ = 0x2,
  act3 = 0x2,
  zoneID_SLZ = 0x3,
  act4 = 0x3,
  zoneID_SZ = 0x4,
  zoneID_CWZ = 0x5,
  zoneID_Unk = 0x6,
};

/* 10 */
enum artID
{
  artID_EggmanBoss = 0x11,
  artID_LevelEnd = 0x12,
};

/* 11 */
struct __attribute__((packed)) __attribute__((aligned(1))) levelhead
{
  char plcID;
  __int16 field_1;
};

/* 12 */
enum textcode
{
  _1 = 0x1,
  _2 = 0x2,
  _3 = 0x3,
  _Y = 0xF,
  _Z = 0x10,
  _A = 0x11,
  _B = 0x12,
  _C = 0x13,
  _D = 0x14,
  _E = 0x15,
  _F = 0x16,
  _G = 0x17,
  _H = 0x18,
  _I = 0x19,
  _J = 0x1A,
  _K = 0x1B,
  _L = 0x1C,
  _M = 0x1D,
  _N = 0x1E,
  _O = 0x1F,
  _P = 0x20,
  _Q = 0x21,
  _R = 0x22,
  _S = 0x23,
  _T = 0x24,
  _U = 0x25,
  _V = 0x26,
  _W = 0x27,
  _X = 0x28,
  __ = 0xFF,
};

/* 13 */
enum objID
{
  objID_Null = 0x0,
  objID_Sonic = 0x1,
  objID_ProjectileBall = 0x20,
  objID_Missile = 0x23,
  objID_SmallExplosion = 0x24,
  objID_LightExplosion = 0x27,
  objID_TitleCard = 0x34,
};

/* 14 */
enum VDPSTAT
{
  PAL_MODE = 0x0,
  DMA_IN_PROGRESS = 0x1,
  HBLANKING = 0x2,
  VBLANKING = 0x3,
  ODD_FRAME = 0x4,
  SPRITE_COLLISION = 0x5,
  SPRITE_OVERFLOW = 0x6,
  VBLANK_PENDING = 0x7,
  FIFO_FULL = 0x8,
  FIFO_EMPTY = 0x9,
};

/* 15 */
enum VDPCMD
{
  VRAMREAD = 0x0,
  VSRAMREAD = 0x10,
  CRAMREAD = 0x20,
  VRAMCOPY = 0xC0,
  VRAMWRITE = 0x40000000,
  VSRAMWRITE = 0x40000010,
  VRAMDMA = 0x40000080,
  VSRAMDMA = 0x40000090,
  CRAMWRITE = 0xC0000000,
  CRAMDMA = 0xC0000080,
};

/* 16 */
enum SYSTEM
{
  HBLANK_VBLANK_ENABLE = 0x2300,
};

/* 17 */
enum SOUND
{
  sfxCMD_E1 = 0x0,
};

